services:
  app:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    container_name: php_app
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    restart: unless-stopped
    depends_on:
      - mariadb
    networks:
      project_network:
        ipv4_address: 192.168.130.2
    ports:
      - "9000:9000"  # Host:Container

  web:
    image: nginx:latest
    container_name: nginx_web
    ports:
      - "4900:80"
      - "4901:443"  # เพิ่มการเปิด port 443 สำหรับ HTTPS
    volumes:
      - web_data:/var/www/html
      - ./src:/var/www/html
      - ./default.conf/default.conf:/etc/nginx/conf.d/default.conf
      - ./default.conf/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl/certificates.crt:/etc/ssl/certs/certificate.crt  # ใบรับรอง SSL
      - ./ssl/certificates.key:/etc/ssl/private/private.key  # คีย์ส่วนตัว SSL
    networks:
      project_network:
        ipv4_address: 192.168.130.3
    depends_on:
      - app
    restart: unless-stopped

  mariadb:
    image: mariadb:latest
    restart: unless-stopped
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: '@Project67'
      MYSQL_DATABASE: project
      MYSQL_USER: admin
      MYSQL_PASSWORD: '@Project67'
      TZ: Asia/Bangkok
    networks:
      project_network:
        ipv4_address: 192.168.130.4
    ports:
      - "3306:3306"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: rice_phpmyadmin
    restart: unless-stopped
    ports:
      - "4903:80"
    environment:
      PMA_HOST: mariadb  # ใช้ mariadb แทน db
      MYSQL_ROOT_PASSWORD: '@Project67'
      PMA_LANGUAGE: th
      TZ: Asia/Bangkok
    depends_on:
      - mariadb  # เปลี่ยนจาก db เป็น mariadb
    networks:
      project_network:
        ipv4_address: 192.168.130.5

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./src:/app
    working_dir: /app
    command: ["sh", "-c", "while true; do sleep 1000; done"]
    networks:
      project_network:
        ipv4_address: 192.168.130.6

networks:
  project_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.130.0/24

volumes:
  db_data:
  web_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/var/www/html'
